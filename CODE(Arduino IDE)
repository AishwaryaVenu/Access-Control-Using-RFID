#include <LiquidCrystal.h>
const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

char tag[] ="Write your tag number"; // The Tag ID which we got from Program 16.0
char input[write your tag length]; // A Variable to store the ID of the Tag being presented
int count = 0; // A counter variable to navigate through the input[] character array
boolean flag = 0; // A variable to store the Tag match status
boolean state = 0; // A variable to store the state of the Led to be toggled
void setup()
{
   lcd.begin(16,2);
  Serial.begin(9600); // Initialise Serial Communication with the Serial Monitor
  Serial.println("Please Swipe the card");
 Serial.println("write Anything you want");
  lcd.write("Swipe the card");
 Serial.println("ANYTHING");
 delay(2000);
 lcd.clear();
}

void loop()
{
  
  if(Serial.available())// Check if there is Incoming Data in the RFID Reader Serial Buffer. 
  {
    count = 0; // Reset the counter to zero
    while(Serial.available() && count < 12) // Keep reading Byte by Byte from the Buffer till the RFID Reader Buffer is empty or till 12 Bytes (the ID size of our Tag) is read
    {
      input[count] = Serial.read(); // Read 1 Byte of data and store it in the input[] variable
      count++; // increment counter
      delay(5);
    }
    if(count == 12) // When the counter reaches 12 (the size of the ID) we stop and compare each value of the input[] to the corresponding stored value
    {
      count =0; // reset counter varibale to 0
      flag = 1;
      while(count<12 && flag !=0) // Iterate through each value and compare till either the 12 values are all matching or till the first mistmatch occurs
      {
        if(input[count]==tag[count])
        flag = 1; // everytime the values match, we set the flag variable to 1
        else
        flag=0; // if the ID values don't match, set flag variable to 0 and stop comparing by exiting the while loop
        count++; // increment i
      }
    }
    if(flag == 1) // If flag variable is 1, then it means the tags match
    {
       while (Serial.available() > 0) 
      // display each character to the LCD
      lcd.write(Serial.read());
    
      Serial.println(input);
      lcd.write(input);
      lcd.setCursor(0, 1);
      Serial.println("Access Allowed");
      lcd.write("ANYTHING");
      state = !state; // Toggle state
      delay(2000);
      lcd.clear();
    }
    else
    {
       while (Serial.available() > 0) 
      // display each character to the LCD
      lcd.write(Serial.read());
      Serial.println(input);
      lcd.write(input);
        lcd.setCursor(0, 1);
      Serial.println("Access anonymous");
      lcd.write("ANYTHING");// Incorrect Tag Message
      delay (2000);
      lcd.clear();
    }
   
    for(count=0; count<12; count++) // Fill the input variable array with a fixed value 'F' to overwrite all values getting it empty for the next read cycle
      {
        input[count]= 'F';
      }
     count = 0; // Reset counter variable  
  }
}
